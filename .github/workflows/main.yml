name: Build, tag, push, deploy, and upload

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'app/**'

jobs:
  deploy:
    name: Build, tag, push, deploy, and upload
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      # https://github.com/marketplace/actions/checkout
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      # https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Amazon ECR login
      id: login-ecr
      # https://github.com/marketplace/actions/amazon-ecr-login-action-for-github-actions
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, push, and deploy Docker image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ github.event.repository.name }}
        IMAGE_TAG: latest
      working-directory: app/backend
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        aws lambda update-function-code --function-name $REPOSITORY --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG 2>&1 > /dev/null
      
      - name: Upload app files to S3 bucket
        working-diretory: app/frontend
        run: aws s3 sync . s3://${{ secrets.WEBSITE_BUCKET_NAME }}
